<%
  function capitalize(string) {
    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
  }

  var responseType = 'void';
  if (method.responseMediaType) {
    if (method.responseMediaType === 'application/json') {
      responseType = method.responseType;
    } else {
      responseType = 'string';
    }
  }

  var requestType = null;
  if (method.requestMediaType) {
    if (method.requestMediaType === 'application/json') {
      requestType = method.requestType;
    }
  }

  var params = (method.pathParams || []).concat(method.queryParams || []).concat(method.formParams || []);

  var argsVars = params.map(function(pathParam) {
    return pathParam.name + ': ' + pathParam.type;
  });

  if (requestType) {
    argsVars.push( varPfx + 'request : ' + requestType);
  }
%>

public <%- method.name %>(<%- argsVars.join(', ') %>): Observable<<%- responseType %>>{
    let <%- varPfx %>headers: Headers = new Headers();
    <%- varPfx %>headers.append('Accept', '<%- method.responseMediaType || '*/*' -%>');
    <% if (method.requestMediaType) { %>
      <%- varPfx %>headers.append('Content-Type', '<%- method.requestMediaType %>');
    <% } %>
    let <%- varPfx %>reqOptions: RequestOptions = new RequestOptions({
        method: RequestMethod.<%- capitalize(method.method) %>,
        <% if (method.pathParams) { %>
          url: this.<%- varPfx %>rootUrl + this.<%- varPfx %>util.substitudeUrl('<%- method.path %>', {<%- method.pathParams.map(function(param) { return param.name; }).join(', '); %>}),
        <% } else { %>
          url: this.<%- varPfx %>rootUrl  + '<%- method.path %>',
        <% } %>
        <% if (method.queryParams) { %>
          search: this.<%- varPfx %>util.encodeParams({<%- method.queryParams.map(function(param) { return param.name; }).join(', '); %>}),
        <% } %>
        <% if (method.formParams) { %>
          body: this.<%- varPfx %>util.encodeParams({<%- method.formParams.map(function(param) { return param.name; }).join(', '); %>}),
        <% } %>
        <% if (requestType) { %>
          body: JSON.stringify(<%- varPfx %>request),
        <% } %>
        headers: <%- varPfx %>headers
    });
    return this.<%- varPfx %>http.request(new Request(<%- varPfx %>reqOptions)).map((<%- varPfx %>res : Response) => {
        <% if (responseType !== 'void') { %>
          <% if (responseType === 'string') { %>
            return <%- varPfx %>res.text();
          <% } else { %>
            return this.<%- varPfx %>util.toObject<<%- responseType %>>( <%- varPfx %>res);
          <% } %>
        <% } %>
    });
}
